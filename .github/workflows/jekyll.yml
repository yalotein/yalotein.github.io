name: Jekyll site CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the site in the ruby container
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        ubuntu:jammy /bin/bash -c "
        apt-get update && \
        apt-get install -y wget bzip2 python3-pip supervisor && \
        apt-get clean && \
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
        bash /tmp/miniconda.sh -b -p /opt/miniconda && \
        rm /tmp/miniconda.sh && \
        export PATH='/opt/miniconda/bin:$PATH' && \
        conda init bash && \
        bash -c 'source ~/.bashrc && conda install -c conda-forge -c anaconda python=3.10  gcc=11.3 gcc_linux-64=11.3 gfortran=11.3  gxx=11.3 sysroot_linux-64=2.28 go cmake make automake autoconf glib expat libnetcdf zlib nodejs ruby' && \
        source ~/.bashrc
        ln -s $CONDA_PREFIX/lib $CONDA_PREFIX/lib64 && \
        export CUDA_HOME=$CONDA_PREFIX && \
        export XLA_FLAGS=$CONDA_PREFIX && \
        export LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$CONDA_PREFIX/lib64 && \
        export CFLAGS='-I$CONDA_PREFIX/include' && \
        export CXXFLAGS='-I$CONDA_PREFIX/include' && \
        export CPPFLAGS='-I$CONDA_PREFIX/include' && \
        export CC=$CONDA_PREFIX/bin/gcc && \
        export CXX=$CONDA_PREFIX/bin/g++ && \
        export LDFLAGS='-L$CONDA_PREFIX/lib -L$CONDA_PREFIX/lib64' && \
        gem install bundler jekyll && \
        gem uninstall sass && \
        cd /srv/jekyll && \
        bundle install && \
        jekyll build --future"
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4